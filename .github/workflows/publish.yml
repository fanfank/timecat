name: Build and Publish to PyPI

# 触发条件
on:
  # 当创建 release 时自动发布到正式 PyPI
  release:
    types: [published]
  
  # 也可以手动触发
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Test timecat functionality
      run: |
        chmod +x timecat
        ./timecat --help
        # 可以添加更多测试命令

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    # 使用 environment 提供额外的安全保护
    environment: release
    permissions:
      id-token: write  # 用于 Trusted Publisher 的 OIDC token
      contents: read   # 用于读取仓库内容
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        # 方式1: 使用 Trusted Publisher (推荐)
        # 如果配置了 Trusted Publisher，不需要下面的 password 行
        
        # 方式2: 使用 API Token (备用)
        # 如果没有配置 Trusted Publisher，取消下面这行的注释
        # password: ${{ secrets.PYPI_API_TOKEN }}
        
        packages-dir: dist/
